
* 배열의 고차함수

    map, filter ,find ,findIndex ,reduce, every, some, sort

    keyword
        * 새로운 배열 반환

    map
        배열의 모든 요소를 순차적으로 순환하며 인자로 주어진 콜백함수의 반환 값으로
        새롱누 배열을 생성, 기존 배열을 훼손시키지 않음.          

    filter
        배열의 모든 요소를 순차적으로 순환하며 식이 true인 값만 가져온다.

    
    
    const arr=  [
    {
        id: 1
        name : "홍윤기"
    },
    {
        id: 2
        name : "홍윤기2"
    },
    {
        id: 3
        name : "홍윤기3"
    },
    ]
    const filterArr=arr.filter((el,index, originArr)=>{
    return el.id !==1
    })

    console.log(filterArr)
    //[{id:2,name:"홍윤기2"},{id:3,name:"홍윤기3"}];

---------------------------------------------------------------------------------------------------------------------

    find
        배열의 모든 요소를 순회하며 주어진 콜백함수를 실행하고 그 반환값이 true인 것 중 첫번째 요소를 반환

    findIndex
        배열의 모든 요소를 순회하며 주어진 콜백함수를 실행하고 그 반환값이 true인 것 중 첫번째 요소의 인덱스를 반환
        찾고자 하는 아이디가 없다면 -1를 반환

---------------------------------------------------------------------------------------------------------------------


    reduce
        누적 값을 구할 때 많이 사용, 요소들이 계산된 누적값과 현재 요소를 return

        
---------------------------------------------------------------------------------------------------------------------

    every
        배열의 모든 요소를 순회하며 해당 조건이 모두 만족하면 true 아니면 false를 반환

    some 
        배열의 모든 요소를 순회하며 해당 조건이 일부 만족하면 true 아니면 false를 반환

---------------------------------------------------------------------------------------------------------------------



    