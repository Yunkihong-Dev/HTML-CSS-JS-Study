
CSS ? 
    (Cascading Styled Sheets)

    HTML문서에 style 속성을 추가하여 시각적으로 꾸며주는 역할
    디자인 부분을 담당

    -----------------------------------------------------------------------------------------

    CSS 적용법 (스타일링 기법)

    1. 내부 스타일링
        -HTML 문서의 <style> 요소 안에 <style> 요소를 활용하여 적용
        한 페이지(html 파일) 안에서 스타일링 적용

        ex)
            <html>
                <head>
                    <style>

                    </style>
                </head>
                <body></body>
            <html>

    
    2. 외부 스타일링
        - HTML 문서의 <head> 요소 안에 <link> 요소를 활용하여
        한 페이지(html 파일) 안이 아닌 외부에 만들어둔 css문법이 담긴 파일을
        연결하여 적용하는 방법, 다른html 파일에도 적용이 가능

        css(folder)
            style.css(file)
        
        <head>
            <link href="./css/style.css" rel="stylesheet"/>
        </head>

    3. 인라인 스타일링
        - 요소 안에 직접적으로 style 속성을 활용하여 적용

            <p style ="font-size:50px;>....</p>
        
            내부 외부 포함한 어떤 css보다 우선순위가 높다.
  
    =>내부 스타일 (한html 문서 안에 작성)
      외부 스타일 (html파일안에 작성)

      -------------------------------------------------------------------------------------------------
      
      선택자

        CSS 문법
            선택자
            ---{
                ...CSS
            }

        1) 전체 선택자
            스타일을 모든 요소에 적용
            단, 전체 선택자는 다른 선택자 보다 우선 순위가 낮기 때문에
            그 이후 선언되는 CSS가 있다면 덮어 씌어진다.
            *{
                CSS 속성 : 속성값;
            }

            reset.css

                *{
                    margin:0;
                    padding :0;
                    font-family : 'Noto Sans'
                }

        2) 요소 선택자
            특정 태그명을 선택하여 모든 해당 태그에 CSS를 적용

            ex) p {
                CSS 속성 :속성 값;
                }   
        * 3) id, class 선택자
            요소 id와 class 속성에 관한 이야기
             <p id="" class ="">...</p>
                고유값과 그룹화
                특정 요소를 그룹으로묶어주거나 하나의 요소만 구분하기 위하여 사용
                요소에 이름을 지어주는 행위


            1) 그룹화 할 때 사용하는 속성 - class
            2) 특정 요소를 선택하여 사용하는 속성 - id

            이를 활용하여 css 선택자로 적용한다면

            내가 원하는 요소를 선택하여 css 속성을 부여할 수 있고
            한 번의 css 속성 부여를 통해 여러요소(특정그룹)에 css 적용이 가능하다

            id선택자
                #아이디명{
                    CSS 속성명: 속성값 ;
                }

                <div id = "nav"><div>

                #nav{
                    ...
                }


            class 선택자
                .클래스명{
                    CSS 속성명 : 속성값;
                }

                <ul>
                    <li class="menu_item"></li>
                    <li class="menu_item"></li>
                    <li class="menu_item"></li>
                </ul>
                .menu_item {
                    ...
                }
                

      -------------------------------------------------------------------------------------------------
            
            4) 그룹 선택자
                선택자1, 선택자2, 선택자3, ...{
                    ....CSS문법
                }

                p, div{
                    ...
                }
                ..active, #content{
                    ...
                }

                    장점 : 동일한 속성을 부여해야 하는 경우 css를 추가로 작성하지 않고 재사용할 수 있다.
            가족 선택자
                CSS 선택자의 가족
                    HTML 요소의 가족관계

                    조상:상위의 모든 요소
                    부모: 바로위 상위 요소

                    자손: 하위의 모든 요소
                    자식: 바로 아래의 하위요소

                    형제: 이웃한 요소

                    ex)
                    <div>
                        <div>
                            <div> ---- 기준 요소
                                <div>
                                    <div></div>
                                    <div></div>
                                </div>
                            </div>
                            <div></div>
                            <div></div>
                        </div>
                        <div></div>
                        <div></div>
                    </div>

        **(1) 자식 선택자(">")

                기준 선택자 > 자식 선택자{
                    ...CSS
                }

                header > nav{
                    ...
                }

                header > nav > p{
                    ...
                }
                <header>
                    <nav>
                        <p> .... </p><---선택
                    </nav>
                </header>







        **(2) 자손 선택자 (" ")
            
            기준선택자 자손선택자{
                ...
            }
            header p{

            }

            <header>
                <p>
                    <p>
                        <p> </p>
                    </p>
                </p>
            </header>

            => 1.이어지는 깊이가 깊어질 수록 우선 순위가 높아진다는 장점
               2. class, id 값을 남발하는 것을 방지
               3. css 선택자로서의 가독성 상승

               (
                자식 자손 형제 선택자 실습
                형제 선택자
                가상 클래스 선택자
                가상 요소 선택자
                텍스트css 속성(폰트)
                크기단위(px,em,rem,%)
               )


