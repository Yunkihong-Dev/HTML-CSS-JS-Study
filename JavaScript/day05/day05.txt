**** Array (배열)

    자바스크립트에서 배열은 이름과 인덱스로 참조되는 (정렬된) 값의 집합.
    배열을 구성하는 각각의 값을 요소라고 하며, 배열의 위치를 가르키는 숫자를 인덱스라 한다.

    ex)
            [1,2,3,4,5]
    index =  0 1 2 3 4 


    자바스크립트 배열의 특징
    1. 배열 요소의 타입이 고정되어있지 않습니다.


    -------------------------------------------
    **** 배열의 내장함수(부가 기능)
    pop, push, unshift, concat, join,

    배열명.push()
        -원본 배열의 맨 끝에 요소를 추가.

    배열명.pop()
        - 원본 배열의 맨 끝에 요소를 제거하고 제거된 요소를 반환한다.
        ex) const arr = [1,2,3,4,5]
        const e1 = arr.pop();
        console.log(arr.el);
    배열명.unshift()
        - 원본 배열의 맨 처음에 요소를 추가
    
    배열명.shift()
        - 원본 배열의 맨 처음에 값을 제거, 제거된 요소를 반환한다.

    배열명.join()
        - 원본 배열 요소 사이에 원하는 문자를 삽입한 문자열을 반환

    배열명.reverse()
        - 배열의 순서를 역순 배치

    배열명.sort()
        - 원본 배열의 정렬(오름차순, 내림차순)

    배열명.splice(start,deleteCount, item)
        - 원본 배열의 요소를 제거하고 해당 요소의 위치에 값을 추가.

         ex)
         const arr = [1,2,3,4,5]
         const newArr = arr.splice(1,2,'배고프다')
         
         console.log(arr, newArr)

    배열명.slice(start,count)
    - 인자로 지정된 배열의 부분을 복사함. 이때 배열은 수정되지 않는다.
    
    ex)
    const arr = [1,2,3,4,5];
    const el = arr.slice(2,4); //[3,4]

    //특정 값의 위치를 찾거나 유무를 찾을 때

    배열명.indexOf()
        인자(파라미터, 매개변수)로 전달받은 값이 해당 배열에 있는지 인덱싱하고
        값이 있다명 가장 먼저 있는 요소의 인덱스 값을 반환, 없다면 -1을 반환함
        const arr = [1,2,3,4,5]

        if(index<0) return ;
        //조건식에 특정한 변수명만 들어가면 해당 변수가 비어있는지 아닌지 확인
        //indexOf의 경우가 요소가 없으면 -1을 반환하기 때문에 일반 조건식 비교해선 안됨.
        //반드시 부등호로 비교
    배열명.includes()
        cosnt arr = [1,2,3,4,5]
        const el = arr.includes(5) //true

        if(el){
        ...
        }


    배열명.lastIndexOf()

    ------------------------------------

    콜백 함수
        한 함수에서 인자로 또 다른 함수 전달받아지고 해당 함수를 전달받은 부모함수가 실행하는 경우

        function parent(number, action){
            for(let i=0;i<number;i++){
                action(i)
            }
        }
        parant(5,(index) =>{
            console.log(index*2);
        })